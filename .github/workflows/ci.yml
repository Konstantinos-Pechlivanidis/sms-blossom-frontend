name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Validate lockfile integrity
      run: |
        echo "üîç Checking lockfile integrity..."
        npm ci --dry-run
        echo "‚úÖ Lockfile is in sync with package.json"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Type check
      run: npm run typecheck
    
    - name: Lint
      run: npm run lint
    
    - name: Run unit tests
      run: npm run test
      env:
        CI: true
    
    - name: Run accessibility tests
      run: npm run test -- tests/a11y.test.ts
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Validate lockfile integrity
      run: |
        echo "üîç Checking lockfile integrity..."
        npm ci --dry-run
        echo "‚úÖ Lockfile is in sync with package.json"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install --with-deps
    
    - name: Run E2E tests
      run: npm run test:e2e
      env:
        CI: true
    
    - name: Upload E2E screenshots
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: e2e-screenshots
        path: artifacts/e2e/

  build:
    name: Build & Bundle Analysis
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Validate lockfile integrity
      run: |
        echo "üîç Checking lockfile integrity..."
        npm ci --dry-run
        echo "‚úÖ Lockfile is in sync with package.json"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
      env:
        VITE_API_BASE_URL: 'https://sms-blossom-api.onrender.com'
        VITE_SHOPIFY_API_KEY: 'test-api-key'
    
    - name: Generate bundle report
      run: npm run bundle:report
    
    - name: Upload bundle report
      uses: actions/upload-artifact@v3
      with:
        name: bundle-report
        path: artifacts/bundle/

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Validate lockfile integrity
      run: |
        echo "üîç Checking lockfile integrity..."
        npm ci --dry-run
        echo "‚úÖ Lockfile is in sync with package.json"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run dependency check
      run: npm audit --audit-level=high

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [test, e2e, build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Validate lockfile integrity
      run: |
        echo "üîç Checking lockfile integrity..."
        npm ci --dry-run
        echo "‚úÖ Lockfile is in sync with package.json"
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
        VITE_SHOPIFY_API_KEY: ${{ secrets.VITE_SHOPIFY_API_KEY }}
    
    - name: Deploy to production
      run: echo "Deploy to production server"
      # Add your deployment commands here